pipeline {
    agent any
    environment {
        DOCKER_IMAGE_NAME = 'scientific-calculator'
        DOCKER_TAG = 'akshat2911/scientificCalculator:latest'
        GITHUB_REPO_URL = 'https://github.com/Akshat2920/ScientificCalcMiniProject'
        DOCKER_CREDENTIALS_ID = 'DockerHubCred'  // Ensure correct Jenkins credential ID
    }

    stages {
        stage('Checkout Code') {
            steps {
                git 'https://github.com/Akshat2920/ScientificCalcMiniProject' 
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install -r requirements.txt || true'
            }
        }
        
        stage('Build Python Code') {
            steps {
                sh 'python3 -m py_compile ScientificCalculator.py'
            }
        }

        stage('Run Python Tests') {
            steps {
                sh 'python3 -m unittest discover -s . -p "Test*.py"'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '/usr/local/bin/docker build -t ${DOCKER_IMAGE_NAME} .'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([string(credentialsId: 'docker-hub-password', variable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | /usr/local/bin/docker login -u akshat2911 --password-stdin'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh '/usr/local/bin/docker push akshat2920/scientific-calculator:latest'
            }
        }

        stage('Cleanup Docker Images') {
            steps {
                sh '/usr/local/bin/docker rmi akshat2920/scientific-calculator:latest || true'
                sh '/usr/local/bin/docker system prune -f || true'
            }
        }
    }

    post {
        success {
            echo "Build, Tests, and Docker Push Successful! üöÄ"
        }
        failure {
            echo "Build or Tests Failed! ‚ùå"
        }
    }
}

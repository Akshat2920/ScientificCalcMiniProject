pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "akshat2920/scientific-calculator"
        DOCKER_TAG = "akshat2920/scientific-calculator:latest"
        DOCKER_CREDENTIALS_ID = "docker-hub-credentials" 
    }

    stages {
        stage('Checkout Code') {
            steps {
                git 'https://github.com/Akshat2920/ScientificCalcMiniProject'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install -r requirements.txt || true'
            }
        }
        
        stage('Build') {
            steps {
                sh 'python3 -m py_compile ScientificCalculator.py'
            }
        }

        stage('Run Python Tests') {
            steps {
                sh 'python3 -m unittest discover -s . -p "Test*.py"'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $DOCKER_IMAGE:$DOCKER_TAG ."
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh "docker push $DOCKER_IMAGE:$DOCKER_TAG"
            }
        }

        stage('Clean Up Docker Images') {
            steps {
                sh "docker rmi $DOCKER_IMAGE:$DOCKER_TAG || true"
                sh "docker image prune -f"
            }
        }
    }

    post {
        success {
            echo "Build, Tests, and Docker Push Successful!"
        }
        failure {
            echo "Build or Tests Failed!"
        }
    }
}
